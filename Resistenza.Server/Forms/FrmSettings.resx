<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAACwwAAAsMAT9AIsgAAAAHdElNRQfoARkWCjmb872qAAAE
        W0lEQVRIS72W225bRRSG58KX8xAopeXUpDnUSXzM2U58Cm2TxmlVBCQtiNI3SBFcoPIa3IAEF7wGooBH
        bekTgO297e1tO6eiCi3+fzxO7SR3FSzp1yS5+L+91pq1Jup/i4NSWb0sXVP7pe2eCmW1n99S3dxN1V3b
        VN3VDdXJ3lCdzHXVWbmm2svvq/bSumovllS4UFThfEGFc3nVSuVUK7mmWok19ScUQCfxcrOsOgWYr29H
        DkrbGhANiO7mb+publN31zY0IBoQDYgGRAOiAdGAaEA0ILqVzulWMqfDZC4SzGbUYfG2IyD2i/jy4lYE
        WTzEz5X9wpYBxCATg0wMMjGAGEAMIAYQ015cN+FCyYTzRRPOFUyYzhtkYpBJJYiv7jVms5FmfNUREITY
        DCygLAAIAAKAACAACAACgAAgyEKQhSALQRaCLAQAAUCCxKoEsWwliGU0TkdA2B6wRL0MXhcgzdmMac6u
        aMgREGwye+BKNAyAeYfmfcDCAIDmZwAr0pxZNpCGHAFhb5Ftsu3BECAobEnj+h0J8fWDgCCdE69YFh/w
        IJ4dBEhzesk0o0sacgQEjAHiLbJNHgJ0fvhJDn+tiL/7QFooDZosQWpNvI/uy+Hj3yX87kfxAG/OOEB0
        SRpXFw2kIUdAwBigDY2Tt6jXA3whMyCAcfzsufg7n0sjkQXgMzl++tz+/fCX36SOD8PX9wHSmFowjcl5
        DTkCAsYUZ4HX9KTJLFFj58GJIU//q2/k+Mkz+/sRwPUPPpXGMED8yXnjT8xpyBEQMKY4bJyDoSazRP7H
        90+M/3nxtz2Pnvwh9TsARBeHARNz4o+njX8lrXE6AgLGFKeZgzZ8i9CDJm6O/+UjAF5YAEHeF4/Eg+k5
        APGvpIw3ltL+WMoREDCmuC7M6Tlgk/0P0YPzMrl9j6UZBoylxBtNGm80oXE6AgLGFHbROtbF8DX1B5pM
        Y+/h13JknvZ+x99rt3bFo/krgHiXE6b+Xlx7l+OOgIAxhWWHXTQwaJwDXtOeIXvwiS1R/dZdAHuZHfz8
        WP6aL4pP8x5A6u/GDKQhR0DAmMI2xbIjwK0KDlobc2CvKQD9JrNEte0dC2h9+71UMR8oTx8g9XdmDaQh
        R0DAmMK6xjYd3EWYZA5affXGmWvKEjEDC4D5AEBqb8+Y2lvTGqcjIGBMabeuh3cRJ/n0HPSbbEt0BiC1
        S9OmdimqcToCAsbKPji99+D0sjsf8KrJpwFSuxg11YtXNeQICBhDfNXw4LwmAMZSfXOqUr0wpSFHQPBN
        biXzEQD20IeKfQ+4rrFNATAAGLsq7CRj0DgHvKa8RWiy7QFLxAwIGJncq46MR6ojE46A4KMfxpZVM5aJ
        8EVDFnwLuKq5SbnouIc0VwUnmYPGOQCEN0jbJqMHtkTMgIA3xlV1dNwREPyvIljZVchCAaIAUYAoQBQg
        itsUEIVMFFcFMlEcNEAUIIq3iE1mD1giZkBA9cJAJv9tKPUvXEeRWloMIfgAAAAASUVORK5CYII=
</value>
  </data>
</root>